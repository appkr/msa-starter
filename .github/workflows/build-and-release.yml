name: Build and Prerelease

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    name: build on ${{ matrix.os }}
# self-hosted runners: https://docs.github.com/en/actions/hosting-your-own-runners/about-self-hosted-runners
# Download and configure: https://github.com/appkr/msa-starter/settings/actions/runners/new?arch=arm64
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, macos-aarch64 ]
    steps:
      - uses: actions/checkout@v2

# GraalVM
# https://github.com/marketplace/actions/github-action-for-graalvm
      - name: GraalVM setup
        uses: graalvm/setup-graalvm@v1
        with:
          version: latest
          java-version: '17'
          cache: gradle
          components: native-image
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: set env vars
        id: vars
        run: |
          echo "::set-output name=SHA_SHORT::$(git rev-parse --short HEAD)"
          echo ${{ steps.vars.outputs.SHA_SHORT }}

          PLATFORM=macos-amd64
          if [ ${{ matrix.os }} != "macos-latest" ]; then
            PLATFORM=macos-aarch64
          fi
          echo "::set-output name=PLATFORM::$PLATFORM"
          echo ${{ steps.vars.outputs.PLATFORM }}

          echo "::set-output name=VERSION::$(./gradlew -q printVersion)"
          echo ${{ steps.vars.outputs.VERSION }}

      - name: build jar and native image
        run: |
          ./gradlew clean build
          ./gradlew nativeCompile
          PWD=`pwd`
          cd build/native/nativeCompile
          zip msastarter-${{ steps.vars.outputs.VERSION }}-${{ steps.vars.outputs.PLATFORM }}.zip msastarter
          cd $PWD

      - name: updload native image
        uses: actions/upload-artifact@v2
        with:
          name: native
          path: build/native/nativeCompile/msastarter-*.zip
          retention-days: 1

      - name: upload fat jar
        uses: actions/upload-artifact@v2
        if: matrix.os == 'macos-latest'
        with:
          name: jar
          path: build/libs/msastarter-*-all.jar
          retention-days: 1

      - name: upload zip distribution
        uses: actions/upload-artifact@v2
        if: matrix.os == 'macos-latest'
        with:
          name: dist
          path: build/distributions/msastarter-shadow-*.zip
          retention-days: 1

# release
# https://electricui.com/blog/github-actions
  release:
    name: create prerelease
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
      - name: display fetched artifacts
        run: ls -alR
      - name: create a github release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: latest
          prerelease: true
          title: Development Build
          files: |
            native/msastarter-*.zip
            jar/msastarter-*-all.jar
            dist/msastarter-shadow-*.zip
