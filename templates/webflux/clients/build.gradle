plugins {
    id 'java'
    id 'java-library'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'maven-publish'
    id 'org.openapi.generator'
}

version = project.version
group = '{{groupName}}.{{projectName}}'
archivesBaseName = '{{projectName}}-api-webclient-client'
def specPath = "${parent.rootDir}/src/main/resources/swagger/api.yml"

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'io.swagger:swagger-annotations:1.6.2'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.2'
}

openApiGenerate {
    generatorName = 'java'
    inputSpec = specPath
    outputDir = '${buildDir}/webclient-client'
    apiPackage = '{{packageName}}.rest'
    modelPackage = '{{packageName}}.rest'
    apiFilesConstrainedTo = ['']
    modelFilesConstrainedTo = ['']
    supportingFilesConstrainedTo = ['']
    configOptions = [
            title: '{{projectName}}',
            useTags: 'true',
            dateLibrary: 'java8',
            java8: 'true',
            hideGenerationTimestamp: 'true',
            library: 'webclient',
            serializableModel: 'true',
            serializationLibrary: 'jackson',
            bigDecimalAsString: 'true',
            useRuntimeException: 'true'
    ]

    validateSpec = true
}

sourceSets {
    main {
        java {
            srcDir file("${buildDir}/webclient-client/src/main/java")
        }
    }
}

jar {
    enabled = true
    from sourceSets.main.output
}

bootJar {
    enabled = false
}

bootRun {
    enabled = false
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = archivesBaseName
            from components.java
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://nexus.mm.meshkorea.net/repository/maven-releases/"
            def snapshotsRepoUrl = "https://nexus.mm.meshkorea.net/repository/maven-snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username repoUser
                password repoPass
            }
        }
    }
}

compileJava.dependsOn('openApiGenerate')
