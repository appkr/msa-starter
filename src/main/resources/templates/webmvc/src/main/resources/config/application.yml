server:
  port: {{portNumber}}
  # @see https://www.baeldung.com/spring-boot-web-server-shutdown
  shutdown: graceful
  # @see https://github.com/zalando/logbook/issues/870
  servlet:
    encoding:
      enabled: true
      charset: UTF-8
      force: true

spring:
  profiles:
    active: local

  output:
    ansi:
      enabled: always

  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/local_{{projectName}}?useSSL=false
    username: root
    password: secret
    hikari:
      poolName: Hikari
      auto-commit: false

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
      dialect: org.hibernate.dialect.MySQL8Dialect

  mvc:
    throw-exception-if-no-handler-found: true
    problemdetails:
      enabled: true

  cloud:
    function:
      definition: consumeMessage
    stream:
      bindings:
        # CONVENTIONS: https://docs.spring.io/spring-cloud-stream/docs/current/reference/html/spring-cloud-stream.html#_functional_binding_names
        #   <functionName> + -in- + <index>
        #   <functionName> + -out- + <index>
        # Consumer properties: https://docs.spring.io/spring-cloud-stream/docs/current/reference/html/spring-cloud-stream.html#_consumer_properties
        # Producer properties: https://docs.spring.io/spring-cloud-stream/docs/current/reference/html/spring-cloud-stream.html#_producer_properties
        consumeMessage-in-0:
          group: {{projectName}}-comsumer-group
          destination: local-{{projectName}}-output
        produceMessage-out-0:
          destination: local-{{projectName}}-output
          header-mode: headers
      binders:
        kafka:
          type: kafka
          headers: [ "messageId", "messageType", "messageVersion", "messageSource" ]
          auto-create-topics: false
      default-binder: kafka

  security:
    oauth2:
      client:
        registration:
          uaa:
            client-id: internal
            client-secret: internal
            scope: web-app
            authorization-grant-type: client_credentials
        provider:
          uaa:
            token-uri: http://localhost:9999/oauth/token
            jwk-set-uri: http://localhost:9999/.well-known/jwks.json

management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include: ['health', 'info', 'metrics', 'loggers']
  endpoint:
    health:
      show-details: when_authorized
      probes:
        enabled: true
  info:
    git:
      mode: simple
  health:
    mail.enabled: false

sentry:
  release: #project.version#
  environment: local
  in-app-includes: '{{packageName}}'
  traces-sample-rate: '0.001'

application:
  version: #project.version#
  scheduler:
    enabled: false

---

spring.config.activate.on-profile: local

server:
  shutdown: immediate

spring:
  jpa:
    properties.hibernate.format_sql: true

application:
  scheduler:
    enabled: true
